{"remainingRequest":"E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\rxjs\\_esm5\\util\\Set.js","dependencies":[{"path":"E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\rxjs\\_esm5\\util\\Set.js","mtime":1530941092996},{"path":"E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530941071524},{"path":"E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1530941065697}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START ._root PURE_IMPORTS_END */\r\nimport { root } from './root';\r\nexport function minimalSetImpl() {\r\n    // THIS IS NOT a full impl of Set, this is just the minimum\r\n    // bits of functionality we need for this library.\r\n    return (function () {\r\n        function MinimalSet() {\r\n            this._values = [];\r\n        }\r\n        MinimalSet.prototype.add = function (value) {\r\n            if (!this.has(value)) {\r\n                this._values.push(value);\r\n            }\r\n        };\r\n        MinimalSet.prototype.has = function (value) {\r\n            return this._values.indexOf(value) !== -1;\r\n        };\r\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\r\n            get: function () {\r\n                return this._values.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        MinimalSet.prototype.clear = function () {\r\n            this._values.length = 0;\r\n        };\r\n        return MinimalSet;\r\n    }());\r\n}\r\nexport var Set = root.Set || /*@__PURE__*/ minimalSetImpl();\r\n//# sourceMappingURL=Set.js.map\r\n",null]}