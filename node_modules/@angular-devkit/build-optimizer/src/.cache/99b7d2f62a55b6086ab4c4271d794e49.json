{"remainingRequest":"E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\rxjs\\_esm5\\operator\\skip.js","dependencies":[{"path":"E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\rxjs\\_esm5\\operator\\skip.js","mtime":1530941092375},{"path":"E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1530941071524},{"path":"E:\\chandana\\E&E\\HRMS\\eeaccess\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1530941065697}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START .._operators_skip PURE_IMPORTS_END */\r\nimport { skip as higherOrder } from '../operators/skip';\r\n/**\r\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\r\n *\r\n * <img src=\"./img/skip.png\" width=\"100%\">\r\n *\r\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\r\n * @return {Observable} An Observable that skips values emitted by the source Observable.\r\n *\r\n * @method skip\r\n * @owner Observable\r\n */\r\nexport function skip(count) {\r\n    return higherOrder(count)(this);\r\n}\r\n//# sourceMappingURL=skip.js.map\r\n",null]}